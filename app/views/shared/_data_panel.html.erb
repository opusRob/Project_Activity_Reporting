
<div class="panel panel-default">
	<div class="panel-heading">
		<div class="panel-title">
			<%= paginate data_obj, :total_count => data_obj.total_count %>
		</div>
	</div>
	<div class="panel-body">
		<table class="table table-striped">
			<thead>
				<tr>
					<%= form_for form_for_obj, :method => "get", :url => data_obj_paths[:list_path] do |f| %>
						<th>
							<%= link_to_bootstrap_glyphicon(data_obj_paths[:new_path], "sm", "success", "New #{label}", ["plus"]) %>
						</th>
						<% data_fields.each do |data_field| %>
							<th>
								<% field_label = data_field.has_key?(:field_label) ? data_field[:field_label] : data_field[:field_name].humanize.titlecase %>
								<% field_filter_default = data_field.has_key?(:field_filter_default) ? data_field[:field_filter_default] : "" %>
								
								<% if (data_field.has_key?(:field_filter) && data_field[:field_filter]) == false %>
									<nobr><%= field_label %></nobr>
								<% else %>
									<% case data_obj.columns_hash[data_field[:field_name]].type %>
									<% when :string %>
										<%= f.label data_field[:field_name].to_sym, field_label %>
										<br />
										<% if params.has_key?(form_for_obj) && params[form_for_obj].has_key?(data_field[:field_name].to_sym) && !params.has_key?("btn_#{form_for_name.downcase}s_reset_filters".to_sym) %>
											<%= f.text_field data_field[:field_name].to_sym, value: params[form_for_obj][data_field[:field_name].to_sym], class: "form-control input-sm", placeholder: "Enter all or part of a #{data_field[:field_name].downcase}" %>
										<% else %>
											<%= f.text_field data_field[:field_name].to_sym, class: "form-control input-sm", placeholder: "Enter all or part of a #{data_field[:field_name].downcase}" %>
										<% end %>
									<% when :boolean %>
										<%= f.label data_field[:field_name].to_sym, field_label %>
										<br />
										<% case data_field[:field_format] %>
											<% when "YesNo" %>
												<% ary_boolean_filter_options = [ ["All", ""], ["Yes", 1], ["No", 0] ] %>
											<% when "TrueFalse" %>
												<% ary_boolean_filter_options = [ ["All", ""], ["True", 1], ["False", 0] ] %>
											<% else %>
												<% ary_boolean_filter_options = [ ["All", ""], ["Yes", 1], ["No", 0] ] %>
										<% end %>
										<% if params.has_key?(form_for_obj) && params[form_for_obj].has_key?(data_field[:field_name].to_sym) && !params.has_key?(:btn_employers_reset_filters) %>
											<%= f.select data_field[:field_name].to_sym, options_for_select(ary_boolean_filter_options, selected: params[form_for_obj][data_field[:field_name].to_sym]), {}, { :class => "form-control input-sm"} %>
										<% else %>
											<%= f.select data_field[:field_name].to_sym, options_for_select(ary_boolean_filter_options, selected: field_filter_default), {}, { :class => "form-control input-sm"} %>
										<% end %>
									<% when :datetime, :date %>
										<%= f.label data_field[:field_name].to_sym, field_label %>
										<br/>
										<% if \
											params.has_key?(form_for_obj) \
											&& params[form_for_obj].has_key?((data_field[:field_name]+"_GTE").to_sym) \
											&& params[form_for_obj].has_key?((data_field[:field_name]+"_LTE").to_sym) \
											&& !params.has_key?("btn_#{form_for_name.downcase}s_reset_filters".to_sym) \
										%>
											<% date_field_value_GTE = params[form_for_obj][(data_field[:field_name]+"_GTE").to_sym] %>
											<% date_field_value_GTE = is_datetime(date_field_value_GTE) ? parse_datetime(date_field_value_GTE).strftime("%m/%d/%Y %l:%M %p").html_safe : "" %>
											<% date_field_value_LTE = params[form_for_obj][(data_field[:field_name]+"_LTE").to_sym] %>
											<% date_field_value_LTE = is_datetime(date_field_value_LTE) ? parse_datetime(date_field_value_LTE).strftime("%m/%d/%Y %l:%M %p").html_safe : "" %>
											<div class="input-group">
												<span class="input-group-addon" aria-hidden="true" style="font-weight: bold; ">>=</span>
												<%= text_field_tag "#{form_for_name.downcase}[#{data_field[:field_name]}_GTE]", date_field_value_GTE, class: "form-control input-sm datetimepicker", placeholder: "m/d/yyyy hh:nn TT" %>
											</div>
											<div class="input-group">
												<span class="input-group-addon" aria-hidden="true" style="font-weight: bold; "><=</span>
												<%= text_field_tag "#{form_for_name.downcase}[#{data_field[:field_name]}_LTE]", date_field_value_LTE, class: "form-control input-sm datetimepicker", placeholder: "m/d/yyyy hh:nn TT" %>
											</div>

										<% else %><!-- datetimepicker between-datestimes -->
											<div class="input-group">
												<span class="input-group-addon" aria-hidden="true" style="font-weight: bold; ">>=</span>
												<%= text_field_tag "#{form_for_name.downcase}[#{data_field[:field_name]}_GTE]", "", class: "form-control input-sm datetimepicker", placeholder: "m/d/yyyy hh:nn TT" %>
											</div>
											<div class="input-group">
												<span class="input-group-addon" aria-hidden="true" style="font-weight: bold; "><=</span>
												<%= text_field_tag "#{form_for_name.downcase}[#{data_field[:field_name]}_LTE]", "", class: "form-control input-sm datetimepicker", placeholder: "m/d/yyyy hh:nn TT" %>
											</div>

										<% end %><!-- datetimepicker between-datestimes -->
									<% end %>
								<% end %>
							</th>
						<% end %>
						<th>
							<%= submit_tag "Apply Filters", name: "btn_#{form_for_name.downcase}s_apply_filters", class: "btn btn-sm btn-primary" %>
							<%= submit_tag "Reset Filters", name: "btn_#{form_for_name.downcase}s_reset_filters", class: "btn btn-sm btn-default" %>
						</th>
					<% end %>
				</tr>
			</thead>
		
			<tbody>
				<% if data_obj.total_count == 0 %>
					<td colspan="10">No records found.</td>
				<% else %>
					<% data_obj.each_with_index do |data_row_current, data_row_number| %>
						<tr>
							<td><%= (((((params.has_key?(:page) ? params[:page].to_i : 1) - 1) * Kaminari.config.default_per_page) + data_row_number) + 1) %></td>
							<% data_fields.each do |data_field| %>
								<% case data_obj.columns_hash[data_field[:field_name]].type %>
									<% when :string %>
										<td><%= data_row_current[data_field[:field_name]] %></td>
									<% when :boolean %>
										<% case data_field[:field_format] %>
											<% when "YesNo" %>
												<td><%= data_row_current[data_field[:field_name]] ? "Yes" : "No" %></td>
											<% when "TrueFalse" %>
												<td><%= data_row_current[data_field[:field_name]] ? "True" : "False" %></td>
											<% else %>
												<td><%= data_row_current[data_field[:field_name]] %></td>
										<% end %>
									<% when :datetime, :date %>
										<td><%= data_row_current[data_field[:field_name]].blank? ? "&nbsp;".html_safe : data_row_current[data_field[:field_name]].strftime(data_field[:field_format]).html_safe %></td>
								<% end %>
							<% end %>




							<td>
								<% if record_actions.length > 0 %>
									<nobr>
										<div class="btn-toolbar" role="toolbar" aria-label="Record Actions">
											<div class="btn-group" role="group" aria-label="Record View Options">
												<%= link_to_bootstrap_glyphicon(data_row_current, "sm", "info", "View #{label}", ["open"]) %>
												<a href="#" class="btn btn-sm btn-info dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
													<span class="caret"></span>
													<span class="sr-only">Toggle Dropdown</span>
												</a>
												<ul class="dropdown-menu" role="menu">
													<% record_show_options.each do |record_show_option| %>
														<% if !record_show_option.has_key?(:href_anchor) %>
															<% record_show_option[:href_anchor] = record_show_option[:text].downcase.titlecase.gsub(/\s/, "").underscore %>
														<% end %>
														
														<% record_show_option_text = record_show_option[:text] %>
														<% record_show_option_matches = record_show_option_text.scan(/{{([^{}]+)}}/).uniq %>
														<% record_show_option_matches.each do |record_show_option_match| %>
															<% record_show_option_text = record_show_option_text.gsub("{{" + record_show_option_match[0] + "}}", data_row_current[record_show_option_match[0].to_sym]) %>
														<% end %>
														<li><%= link_to record_show_option_text.html_safe, organization_path(data_row_current, anchor: record_show_option[:href_anchor]) %></li>
													<% end %>
												</ul>
											</div>
											
											<% if (record_actions & ["edit", "activate"]).any? %>
												<div class="btn-group" role="group" aria-label="Record Edit Options">
													<% if record_actions.include?("edit") %>
														<%= link_to_bootstrap_glyphicon(send("edit_#{form_for_name}_path", data_row_current), "sm", "warning", "Edit #{label}", ["pencil"]) %>
													<% end %>
													<% if record_actions.include?("activate_deactivate") %>
														<% if data_row_current.is_active %>
															<%= link_to_bootstrap_glyphicon(send("deactivate_#{form_for_name}_path", data_row_current), "sm", "warning", "Deactivate #{label}", ["ban-circle"], { method: :deactivate, data: { confirm: 'Are you sure you want to deactivate this record?' } }) %>
														<% else %>
															<%= link_to_bootstrap_glyphicon(send("activate_#{form_for_name}_path", data_row_current), "sm", "success", "Activate #{label}", ["check"], { method: :activate, data: { confirm: 'Are you sure you want to activate this record?' } }) %>
														<% end %>
													<% end %>
												</div>
											<% end %>
											
											<% if (record_actions & ["delete_undelete", "destroy"]).any? %>
												<div class="btn-group" role="group" aria-label="Record Delete Options">
													<% if record_actions.include?("delete_undelete") %>
														<% if !data_row_current.is_deleted %>
															<%= link_to_bootstrap_glyphicon(send("do_delete_#{form_for_name}_path", data_row_current), "sm", "danger", "Delete #{label}", ["trash"], { method: :do_delete, data: { confirm: 'Are you sure you want to delete this record?' } }) %>
														<% else %>
															<%= link_to_bootstrap_glyphicon(send("undo_delete_#{form_for_name}_path", data_row_current), "sm", "success", "Undelete #{label}", ["refresh"], { method: :undo_delete, data: { confirm: 'Are you sure you want to undelete this record?' } }) %>
														<% end %>
													<% end %>
													<% if record_actions.include?("destroy") %>
														<%= link_to_bootstrap_glyphicon(data_row_current, "sm", "danger", "Permanently Delete #{label}", ["fire"], { method: :delete, data: { confirm: "This cannot be undone - are you sure you want to permanently delete this record?" } }) %>
													<% end %>
												</div>
											<% end %>
										</div>
									</nobr>
								<% else %>
									&npsp;
								<% end %>	
							</td>



						</tr>
					<% end %>
				<% end %>
			</tbody>
		</table>
	</div>
	
	<div class="panel-heading">
		<div class="panel-title">
			<%= paginate data_obj, :total_count => data_obj.total_count %>
		</div>
	</div>
</div>